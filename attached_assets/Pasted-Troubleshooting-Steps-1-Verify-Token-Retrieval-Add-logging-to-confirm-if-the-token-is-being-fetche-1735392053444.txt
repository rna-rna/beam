Troubleshooting Steps:
1. Verify Token Retrieval
Add logging to confirm if the token is being fetched properly:

tsx
Copy code
const token = await getToken().catch(() => null);
console.log("Token:", token);

if (!token) {
  toast({
    title: "Authentication Error",
    description: "Failed to retrieve token. Please sign in again.",
    variant: "destructive",
  });
  return;
}
If token logs as null or undefined, the issue lies with Clerkâ€™s getToken().
Solution: Ensure Clerk is initialized correctly in your app (check clerkProvider in your App.tsx or index.tsx).
2. Check User Association in Comment Submission
Ensure the userId is correctly passed when creating a comment:

tsx
Copy code
const response = await fetch(`/api/images/${imageId}/comments`, {
  method: 'POST',
  headers: {
    'Content-Type': 'application/json',
    'Authorization': `Bearer ${token}`
  },
  body: JSON.stringify({
    content,
    xPosition: x,
    yPosition: y,
    userId: user?.id  // Ensure this is passed
  })
});
Check: Log the payload before submission:

tsx
Copy code
console.log("Payload:", {
  content,
  xPosition: x,
  yPosition: y,
  userId: user?.id
});
If user?.id logs as undefined, confirm if useUser() from Clerk is correctly returning the user.

3. Backend Validation
On the server, ensure the route handling /api/images/:id/comments correctly reads the Authorization token. Example (Node.js/Express):

ts
Copy code
const token = req.headers.authorization?.split(" ")[1];
if (!token) {
  return res.status(401).json({ message: "Unauthorized" });
}

const user = await clerkClient.users.getUser(token.sub);
if (!user) {
  return res.status(401).json({ message: "Invalid token." });
}
Fix: If the server expects userId directly, ensure it is extracted and validated.
Quick Fix: Force Association in CommentBubble.tsx
In case userId isn't properly attached, enforce the association directly:

tsx
Copy code
await commentMutation.mutateAsync({
  content: text,
  x: x,
  y: y,
  userId: user?.id || "guest"
});
This forces a fallback userId (replace "guest" with something appropriate).
