 Implement Two Separate Headers (General + Gallery Specific)
Objective:
Create two distinct headers:
General Header ‚Äì Minimal for standard site pages (Home, About, etc.).
Gallery Header ‚Äì Complex, tailored for gallery functionality (tools, filters, dark mode, etc.).
Ensure the correct header loads depending on the route or page.
1. Create General Header (GeneralHeader.tsx):
A simple, site-wide header with basic navigation and user actions.
GeneralHeader.tsx

tsx
Copy code
import { Link } from 'react-router-dom';
import { UserNav } from './UserNav';
import { Button } from '@/components/ui';

export const GeneralHeader = ({ user }) => (
  <div className="sticky top-0 z-50 bg-white shadow flex items-center justify-between px-6 py-4">
    <div className="flex items-center gap-6">
      <Link to="/" className="text-xl font-bold">PhotoGalleryApp</Link>
    </div>

    <div className="flex items-center gap-6">
      {user ? (
        <UserNav user={user} />
      ) : (
        <div className="flex gap-4">
          <Button variant="outline" onClick={() => navigate('/login')}>Log In</Button>
          <Button onClick={() => navigate('/signup')}>Sign Up</Button>
        </div>
      )}
    </div>
  </div>
);
2. Create Gallery Header (GalleryHeader.tsx):
This toolbar includes Tools, Filters, Share, Dark Mode, and UserNav ‚Äì tailored for gallery functionality.
GalleryHeader.tsx

tsx
Copy code
import { Sun, Moon, Share2, ChevronDown } from 'lucide-react';
import { Button, Tooltip, TooltipTrigger, TooltipContent, DropdownMenu, DropdownMenuTrigger, DropdownMenuContent, DropdownMenuItem } from '@/components/ui';
import { UserNav } from './UserNav';

export const GalleryHeader = ({ 
  gallery, 
  user, 
  isDarkMode, 
  toggleDarkMode, 
  openShareModal, 
  toggleSelectionMode, 
  onFilterSelect 
}) => (
  <div className="sticky top-0 z-50 bg-white shadow flex items-center justify-between px-6 py-4">
    <div className="flex items-center gap-6">
      <h1 className="text-2xl font-bold">{gallery?.title || 'Gallery'}</h1>

      <Button variant="outline" onClick={toggleSelectionMode}>
        Tools
      </Button>

      <DropdownMenu>
        <DropdownMenuTrigger asChild>
          <Button variant="outline">
            Filters
            <ChevronDown className="ml-2 h-4 w-4" />
          </Button>
        </DropdownMenuTrigger>
        <DropdownMenuContent>
          <DropdownMenuItem onClick={() => onFilterSelect('starred')}>‚≠ê Starred</DropdownMenuItem>
          <DropdownMenuItem onClick={() => onFilterSelect('date')}>üìÖ Date</DropdownMenuItem>
          <DropdownMenuItem onClick={() => onFilterSelect('tag')}>üè∑Ô∏è Tags</DropdownMenuItem>
        </DropdownMenuContent>
      </DropdownMenu>
    </div>

    <div className="flex items-center gap-6">
      <Tooltip>
        <TooltipTrigger asChild>
          <Button variant="ghost" onClick={toggleDarkMode}>
            {isDarkMode ? <Sun className="h-5 w-5" /> : <Moon className="h-5 w-5" />}
          </Button>
        </TooltipTrigger>
        <TooltipContent>Toggle Dark Mode</TooltipContent>
      </Tooltip>

      <Button variant="default" onClick={openShareModal}>
        <Share2 className="h-5 w-5 mr-2" />
        Share
      </Button>

      {user ? (
        <UserNav user={user} />
      ) : (
        <div className="flex gap-4">
          <Button variant="outline" onClick={() => navigate('/login')}>Log In</Button>
          <Button onClick={() => navigate('/signup')}>Sign Up</Button>
        </div>
      )}
    </div>
  </div>
);
3. Update Layout.tsx to Conditionally Render Headers by Page:
Based on the route, load the appropriate header.
Gallery pages will use GalleryHeader while general pages use GeneralHeader.
Layout.tsx

tsx
Copy code
import { useLocation } from 'react-router-dom';
import { GeneralHeader } from './GeneralHeader';
import { GalleryHeader } from './GalleryHeader';

const Layout = ({ children, user, gallery, isDarkMode, toggleDarkMode, openShareModal, toggleSelectionMode, onFilterSelect }) => {
  const location = useLocation();
  const isGalleryPage = location.pathname.startsWith('/gallery');

  return (
    <>
      {isGalleryPage ? (
        <GalleryHeader 
          gallery={gallery}
          user={user}
          isDarkMode={isDarkMode}
          toggleDarkMode={toggleDarkMode}
          openShareModal={openShareModal}
          toggleSelectionMode={toggleSelectionMode}
          onFilterSelect={onFilterSelect}
        />
      ) : (
        <GeneralHeader user={user} />
      )}

      <main>{children}</main>
    </>
  );
};
4. Update Gallery.tsx to Remove Redundant Header Logic:
Remove toolbar logic directly from Gallery.tsx since it is now handled by GalleryHeader.
Gallery.tsx (Simplified):

tsx
Copy code
return (
  <div className="relative bg-black/90">
    {/* Gallery Content */}
  </div>
);
