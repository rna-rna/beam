Objective:
Develop a floating toolbar that appears at the bottom center of the screen when the user clicks the 'Select' or 'Tools' button in the gallery view. This toolbar will provide bulk action options for selected items.

Key Requirements:
Floating Toolbar Behavior:

The toolbar appears when selection mode is activated.
Sticks to the bottom center of the screen.
Disappears when the user clicks Deselect or no items are selected.
Toolbar Actions (Bulk):

Edit ‚úèÔ∏è
Delete üóëÔ∏è
Download ‚¨áÔ∏è
Deselect ‚ùå (to exit selection mode).
State Management:

Use React useState to track selection mode (selectMode).
Store selected items in an array for bulk actions.
Steps to Implement:
Add State to Manage Selection Mode and Selections:
tsx
Copy code
const [selectMode, setSelectMode] = useState(false);
const [selectedItems, setSelectedItems] = useState([]);
Floating Toolbar Component (Conditional Rendering):
tsx
Copy code
{selectMode && (
  <div className="fixed bottom-8 left-1/2 transform -translate-x-1/2 z-50 bg-white shadow-lg rounded-lg p-4 flex items-center gap-6">
    <span>{selectedItems.length} Selected</span>
    <div className="flex gap-4">
      <Button variant="outline" onClick={editSelected}>
        ‚úèÔ∏è Edit
      </Button>
      <Button variant="destructive" onClick={deleteSelected}>
        üóëÔ∏è Delete
      </Button>
      <Button variant="default" onClick={downloadSelected}>
        ‚¨áÔ∏è Download
      </Button>
      <Button variant="secondary" onClick={() => setSelectMode(false)}>
        Deselect
      </Button>
    </div>
  </div>
)}
Handler Functions for Bulk Actions:
tsx
Copy code
const editSelected = () => {
  console.log('Editing:', selectedItems);
};

const deleteSelected = () => {
  console.log('Deleting:', selectedItems);
  setSelectedItems([]);
  setSelectMode(false);
};

const downloadSelected = () => {
  console.log('Downloading:', selectedItems);
};
Trigger Toolbar on Tools/Select Click:
tsx
Copy code
<Button variant="outline" onClick={() => setSelectMode(!selectMode)}>
  {selectMode ? 'Deselect' : 'Tools'}
</Button>
