Fix the Error Toast (Gallery.tsx):
Modify the mutation to correctly handle success responses and avoid throwing errors unnecessarily:

tsx
Copy code
const toggleStarMutation = useMutation({
  mutationFn: async ({ imageId, isStarred }) => {
    const res = await fetch(`/api/images/${imageId}/star`, {
      method: isStarred ? 'DELETE' : 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${token}`
      },
    });

    const result = await res.json();
    console.log('API Response:', result);

    // Only throw an error if success is explicitly false
    if (!result.success) {
      throw new Error(result.message || 'Failed to update star status');
    }

    return result;
  },
  onMutate: async ({ imageId, isStarred }) => {
    await queryClient.cancelQueries({ queryKey: [`/api/galleries/${slug}`] });
    await queryClient.cancelQueries({ queryKey: [`/api/images/${imageId}/stars`] });

    const previousGallery = queryClient.getQueryData([`/api/galleries/${slug}`]);
    const previousStars = queryClient.getQueryData([`/api/images/${imageId}/stars`]);

    // Optimistic UI update
    queryClient.setQueryData([`/api/galleries/${slug}`], (old: any) => ({
      ...old,
      images: old?.images.map((img: Image) =>
        img.id === imageId ? { ...img, starred: !isStarred } : img
      )
    }));

    // Avoid adding duplicate star locally
    queryClient.setQueryData([`/api/images/${imageId}/stars`], (old: any) => {
      if (!old) return { success: true, data: [] };
      const updatedStars = isStarred
        ? old.data.filter((star: any) => star.userId !== user?.id)
        : [...old.data, {
            userId: user?.id,
            imageId,
            user: {
              firstName: user?.firstName,
              lastName: user?.lastName,
              imageUrl: user?.imageUrl
            }
          }];
      return { ...old, data: updatedStars };
    });

    return { previousGallery, previousStars };
  },
  onError: (err, variables, context) => {
    if (context?.previousGallery) {
      queryClient.setQueryData([`/api/galleries/${slug}`], context.previousGallery);
    }
    if (context?.previousStars) {
      queryClient.setQueryData([`/api/images/${variables.imageId}/stars`], context.previousStars);
    }

    toast({
      title: "Error",
      description: err.message || "Failed to update star status. Please try again.",
      variant: "destructive",
    });
  },
  onSettled: (_, variables) => {
    queryClient.invalidateQueries({ queryKey: [`/api/galleries/${slug}`] });
    queryClient.invalidateQueries({ queryKey: [`/api/images/${variables.imageId}/stars`] });
  },
});
