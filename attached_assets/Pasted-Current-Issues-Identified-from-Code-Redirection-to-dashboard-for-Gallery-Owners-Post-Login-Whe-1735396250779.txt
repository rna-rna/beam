Current Issues (Identified from Code):
Redirection to /dashboard for Gallery Owners Post-Login:

When authenticated, gallery owners are redirected to /dashboard, not the gallery they were viewing.
Public User Flow Disruption:

Unauthenticated users trying to comment/star are redirected to the homepage/login, losing gallery context.
Missing Modal for Engagement Actions:

There’s no modal prompting unauthenticated users to sign up or log in directly within the gallery view.
Proposed Improvements:
Redirect Users Back to Gallery After Login:
Goal: Maintain the gallery context after login.
Solution:
Pass the current gallery URL as a query parameter during the redirect to login:
bash
Copy code
/login?redirect=/galleries/:slug
After login, extract the redirect param and send users back to the gallery:
ts
Copy code
const redirectPath = new URLSearchParams(window.location.search).get('redirect');
navigate(redirectPath || '/dashboard');
Trigger Modal for Unauthenticated Users Instead of Redirecting:
Goal: Improve UX by prompting users to log in without leaving the page.
Solution:
Modify useGalleryPermissions to include a handler for unauthenticated actions:
ts
Copy code
if (!isAuthenticated) {
  openSignUpModal({
    message: 'Sign up to comment or star!',
    redirect: window.location.pathname,
  });
}
This keeps users on the gallery page and brings up a modal for login/signup.
Conditional Rendering Based on Permissions (Frontend):
For Commenting/Star Buttons:
tsx
Copy code
{canComment ? (
  <CommentBox />
) : (
  <button onClick={() => openSignUpModal()}>Sign in to comment</button>
)}

{canStar ? (
  <StarButton />
) : (
  <button onClick={() => openSignUpModal()}>Sign in to star</button>
)}
For Edit/Delete Options (Gallery Owner Only):
tsx
Copy code
{canEdit && <EditButton />}
{isOwner && <DeleteGallery />}
Backend – Improve Auth Check During Comment/Star Submission:
Update routes.ts to handle redirects after successful login:
ts
Copy code
app.use('/login', (req, res) => {
  const redirect = req.query.redirect || '/dashboard';
  res.redirect(redirect);
});
For comment/star API calls, return 401 with a redirect hint in the response:
ts
Copy code
if (!req.auth) {
  return res.status(401).json({ redirect: '/login' });
}
User Flow After Updates:
Unauthenticated User (Commenting/Starring):

Click “Comment” → Modal appears asking to log in.
After login, the user stays in the gallery and can proceed with commenting.
Gallery Owner (Accessing Gallery Post-Login):

Owner visits gallery → Logs in via modal → Redirects to /galleries/:slug, not /dashboard.
Non-Owners (Signed-In Users):

Can star and comment directly without interruption.