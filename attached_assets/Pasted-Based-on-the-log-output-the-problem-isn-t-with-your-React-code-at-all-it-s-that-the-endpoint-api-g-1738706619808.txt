Based on the log output, the problem isn’t with your React code at all—it’s that the endpoint /api/galleries/recent isn’t returning any data. Instead of returning a list of recent galleries, the API is treating "recent" as if it were a gallery slug and then returning a “not found” error.

For example, the log shows:

yaml
Copy
Gallery fetch request: {
  slug: 'recent',
  authenticatedUserId: 'user_2qnftMeTNbz5mLvROjoSB4dPnkK',
  hasAuth: true
}
Gallery fetch result: {
  found: false,
  galleryId: undefined,
  isGuestUpload: undefined,
  isPublic: undefined,
  ownerId: undefined
}
Gallery not found for slug: recent
This tells us that the generic gallery lookup (which probably expects a slug that matches a record in the galleries table) is being called with "recent". Since there’s no gallery with that slug, it returns a 404.

What You Need to Do
Create a Dedicated Recents Endpoint:
Instead of relying on the generic gallery lookup by slug, implement a dedicated endpoint (or adjust your routing) for /api/galleries/recent that queries your database for recent activity. In your schema you already have a table called recently_viewed_galleries (and possibly invites for shared projects). That table should be used to join with the galleries table and return the data you need.

Example Implementation (Express + SQL):

Here’s a sample Express route that you can adapt:

js
Copy
// In your Express router file
router.get('/api/galleries/recent', async (req, res) => {
  try {
    // Assuming you have middleware that sets the authenticated user ID:
    const userId = req.authenticatedUserId;
    if (!userId) {
      return res.status(401).json({ message: 'Unauthorized' });
    }
    
    // Query the recently_viewed_galleries table, joining with galleries
    const query = `
      SELECT g.*, r.viewed_at 
      FROM galleries g
      JOIN recently_viewed_galleries r ON g.id = r.gallery_id
      WHERE r.user_id = $1
      ORDER BY r.viewed_at DESC
      LIMIT 20
    `;
    const { rows } = await db.query(query, [userId]);
    
    // Optionally, if you also want to include invites, perform a similar query
    // and then merge the results (or use a SQL UNION).
    
    res.json(rows);
  } catch (error) {
    console.error("Error fetching recent galleries", error);
    res.status(500).json({ message: "Internal server error" });
  }
});
Notes:

Adjust the code above to match your database client and coding style.
Make sure you’re using the correct user identifier (for example, the one provided by Clerk).
If you need to combine “recently viewed” and “invited” galleries, you may want to use a SQL UNION or perform two queries and merge the results.
