Create the Cursor Overlay Component
components/FigmaCursorOverlay.tsx
Create a reusable cursor overlay component for the gallery.

typescript
Copy
Edit
'use client'

import { motion } from 'framer-motion'

interface UserCursor {
  id: string // Unique user ID
  name: string // User's name
  color: string // User's assigned color
  x: number // Cursor's X position
  y: number // Cursor's Y position
}

interface FigmaCursorOverlayProps {
  cursors: UserCursor[] // Array of cursor data passed from the parent
}

export function FigmaCursorOverlay({ cursors }: FigmaCursorOverlayProps) {
  return (
    <div className="fixed inset-0 pointer-events-none">
      {cursors.map((user) => (
        <motion.div
          key={user.id}
          className="absolute"
          initial={{ x: user.x, y: user.y }}
          animate={{ x: user.x, y: user.y }}
          transition={{ type: 'spring', damping: 20, stiffness: 400 }}
        >
          <div className="flex flex-col items-start">
            <div className="relative">
              {/* Cursor Icon */}
              <svg
                width="24"
                height="36"
                viewBox="0 0 24 36"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
                className="drop-shadow-md"
              >
                <path
                  d="M5.65376 12.3673H5.46026L5.31717 12.4976L0.500002 16.8829L0.500002 1.19841L11.7841 12.3673H5.65376Z"
                  fill={user.color}
                  stroke="white"
                />
              </svg>

              {/* User Info (Name + Initials) */}
              <div
                className="absolute top-[80%] left-0 flex items-center space-x-2 rounded-full pl-1.5 pr-2.5 py-1 text-xs font-medium shadow-sm whitespace-nowrap"
                style={{ backgroundColor: user.color, color: '#FFFFFF' }}
              >
                <div className="w-4 h-4 rounded-full bg-white flex items-center justify-center">
                  <span className="text-[10px]" style={{ color: user.color }}>
                    {user.name[0].toUpperCase()}
                  </span>
                </div>
                <span>{user.name}</span>
              </div>
            </div>
          </div>
        </motion.div>
      ))}
    </div>
  )
}
