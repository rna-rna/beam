Instructions â€“ Conditionally Exclude Layout Header for Gallery Pages
Objective:
Keep the Layout header for standard pages (Dashboard, Settings).
Exclude the header when rendering gallery pages (/g/:slug).
Prevent duplicate headers by relying exclusively on the custom GalleryHeader.tsx for gallery views.
1. Update Layout.tsx to Conditionally Render the Header
Use the route path to detect gallery pages and hide the layout header when appropriate.
Layout.tsx (Updated to Exclude Header on Gallery Pages):

tsx
Copy code
import { useLocation } from 'wouter';

export function Layout({ children, title, actions }: LayoutProps) {
  const [location] = useLocation();
  const isGalleryPage = location.startsWith('/g/');

  return (
    <div className="min-h-screen w-full bg-background">
      {/* Conditionally Render Header (Exclude for Gallery Pages) */}
      {!isGalleryPage && (
        <div className="sticky top-0 z-10 bg-background/80 backdrop-blur-sm border-b">
          <div className="px-6 md:px-8 lg:px-12 py-4 flex items-center gap-4">
            {title ? (
              <h1 className="text-xl font-semibold">{title}</h1>
            ) : null}
            <div className="ml-auto flex items-center gap-4">
              {actions}
              <ThemeToggle />
              <UserNav />
            </div>
          </div>
        </div>
      )}

      <main className="relative">
        {children}
      </main>
    </div>
  );
}
2. Ensure App.tsx Route for Gallery Uses Layout
No changes needed here since Layout will automatically handle exclusion for gallery routes.
App.tsx (Existing Code):

tsx
Copy code
<Route path="/g/:slug">
  {(params) => (
    <Gallery slug={params.slug} />
  )}
</Route>
3. Verify Gallery-Specific Header (GalleryHeader.tsx) is Used
Ensure Gallery.tsx directly renders GalleryHeader without interference from Layout.tsx.
Gallery.tsx (Ensure GalleryHeader is Present):

tsx
Copy code
<GalleryHeader 
  title={gallery?.title || 'Gallery'}
  onTitleUpdate={handleTitleUpdate}
  isDarkMode={isDarkMode}
  toggleDarkMode={toggleDarkMode}
  openShareModal={() => setIsOpenShareModal(true)}
/>
