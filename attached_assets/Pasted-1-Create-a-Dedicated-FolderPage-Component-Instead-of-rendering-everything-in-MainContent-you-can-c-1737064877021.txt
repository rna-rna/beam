1. Create a Dedicated FolderPage Component
Instead of rendering everything in MainContent, you can create a new page component, for example FolderPage.tsx (or FolderView.tsx). It might look like this:

tsx
Copy
// FolderPage.tsx
import { useRoute } from "wouter";
import { useQuery } from "@tanstack/react-query";
import { DashboardSidebar } from "./DashboardSidebar"; // The sidebar you already have
import { FolderHeader } from "./FolderHeader";          // A new component for the title + controls
import { fetchFolderBySlug } from "../api/folder";      // A helper function to fetch the folder

export function FolderPage() {
  // Grab the slug from the route: /f/:folderSlug
  const [match, params] = useRoute("/f/:folderSlug");
  const folderSlug = match ? params.folderSlug : null;

  // React Query to fetch the folder by slug
  const { data: folder, isLoading } = useQuery({
    queryKey: ["folder", folderSlug],
    queryFn: () => fetchFolderBySlug(folderSlug!), // or fetch(`/api/folders/${folderSlug}`)
    enabled: !!folderSlug,
  });

  if (isLoading) {
    return (
      <div className="flex h-full">
        <DashboardSidebar />
        <div className="flex-1 p-6 flex items-center justify-center">
          <div>Loading folder...</div>
        </div>
      </div>
    );
  }

  // If there's no folder data or an error occurred
  if (!folder) {
    return (
      <div className="flex h-full">
        <DashboardSidebar />
        <div className="flex-1 p-6 flex items-center justify-center">
          <div>Folder not found</div>
        </div>
      </div>
    );
  }

  return (
    <div className="flex h-full">
      <DashboardSidebar />

      {/* Main content area */}
      <div className="flex-1 flex flex-col">
        {/* Folder header (like your gallery header) */}
        <FolderHeader folderTitle={folder.name} />

        {/* The rest of the folder content (could be blank or show galleries, etc.) */}
        <div className="p-6">
          {/* If you wanted to show "This folder is empty" if no galleries are inside */}
          {/* Or a list of galleries with folderId = folder.id */}
          {/* For now, just demonstrate an empty view: */}
          <p>This is the folder: {folder.name}</p>
        </div>
      </div>
    </div>
  );
}
Key Points
DashboardSidebar is rendered on the left, so it’s always visible.
We display a header at the top of the main area—for the folder’s name, actions, etc.
We show a loading or error state if the folder can’t be fetched.