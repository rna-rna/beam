To fix the DraftsPage so it displays the DashboardSidebar and the latest draft items, you need to ensure the following:

DashboardSidebar Renders Properly:

Verify that DashboardSidebar is functioning and doesn't have any rendering issues.
Fetch Draft Items Correctly:

Ensure the is_draft filter logic in DraftsPage is correct and matches your database schema.
Display Draft Items in a Grid:

The draftGalleries array should populate the grid dynamically, even if empty.
Steps to Fix DraftsPage
1. Verify the Query Logic
Your DraftsPage fetches galleries and filters for drafts:

tsx
Copy
Edit
const { data: galleries = [], isLoading } = useQuery({
  queryKey: ['galleries'],
  queryFn: async () => {
    const res = await fetch('/api/galleries');
    if (!res.ok) {
      throw new Error('Failed to fetch galleries');
    }
    const data = await res.json();
    return data;
  },
  refetchOnMount: true,
  staleTime: 0,
});

const draftGalleries = galleries.filter(gallery => gallery.is_draft === true && !gallery.deleted_at);
Actions:

Confirm the API endpoint (/api/galleries) is returning data with an is_draft field.
Ensure draftGalleries correctly filters for drafts.
2. Add Empty State Feedback
If there are no draft galleries, ensure the user sees an empty state.

Update the Draft Gallery Grid:

tsx
Copy
Edit
<div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6">
  {draftGalleries.map(gallery => (
    <Card
      key={gallery.id}
      className="overflow-hidden cursor-pointer hover:shadow-lg transition-shadow"
      onClick={() => setLocation(`/g/${gallery.slug}`)}
    >
      <div className="aspect-video relative bg-muted">
        {gallery.thumbnailUrl && (
          <img
            src={gallery.thumbnailUrl}
            alt={gallery.title}
            className="object-cover w-full h-full"
          />
        )}
      </div>
      <div className="p-4">
        <h3 className="font-semibold">{gallery.title}</h3>
        <p className="text-sm text-muted-foreground">
          {gallery.imageCount || 0} images
        </p>
      </div>
    </Card>
  ))}
  {draftGalleries.length === 0 && (
    <div className="col-span-full text-center text-muted-foreground">
      No draft galleries found
    </div>
  )}
</div>
3. Test the Sidebar
Ensure the DashboardSidebar renders correctly:

tsx
Copy
Edit
<DashboardSidebar />
Actions:

Check that the sidebar appears and is interactive (e.g., folder clicks work).
Ensure it doesn’t interfere with the main content rendering.
4. Improve Error Handling
If the API fetch fails, show an error state instead of a blank page.

Update the Loading and Error States:

tsx
Copy
Edit
<div className="flex-1 p-6">
  {isLoading ? (
    <div className="flex items-center justify-center h-full">
      <Loader2 className="h-8 w-8 animate-spin text-primary" />
    </div>
  ) : (
    <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6">
      {draftGalleries.map(gallery => (
        <Card
          key={gallery.id}
          className="overflow-hidden cursor-pointer hover:shadow-lg transition-shadow"
          onClick={() => setLocation(`/g/${gallery.slug}`)}
        >
          <div className="aspect-video relative bg-muted">
            {gallery.thumbnailUrl && (
              <img
                src={gallery.thumbnailUrl}
                alt={gallery.title}
                className="object-cover w-full h-full"
              />
            )}
          </div>
          <div className="p-4">
            <h3 className="font-semibold">{gallery.title}</h3>
            <p className="text-sm text-muted-foreground">
              {gallery.imageCount || 0} images
            </p>
          </div>
        </Card>
      ))}
      {draftGalleries.length === 0 && (
        <div className="col-span-full text-center text-muted-foreground">
          No draft galleries found
        </div>
      )}
    </div>
  )}
</div>
5. Verify the API Schema
From the uploaded routes.txt, the /api/galleries endpoint includes the isDraft field:

Server Code:

ts
Copy
Edit
select: {
  id: true,
  title: true,
  slug: true,
  createdAt: true,
  isDraft: true, // Included isDraft field
},
Ensure:

isDraft corresponds to is_draft in the frontend.
The database schema and API response align.
Final Updated DraftsPage
Here’s the complete updated file:

tsx
Copy
Edit
import { useQuery } from "@tanstack/react-query";
import { DashboardSidebar } from "@/components/DashboardSidebar";
import { Card } from "@/components/ui/card";
import { useLocation } from "wouter";
import { Loader2 } from "lucide-react";

export default function DraftsPage() {
  const [, setLocation] = useLocation();

  const { data: galleries = [], isLoading } = useQuery({
    queryKey: ['galleries'],
    queryFn: async () => {
      const res = await fetch('/api/galleries');
      if (!res.ok) {
        throw new Error('Failed to fetch galleries');
      }
      return res.json();
    },
    refetchOnMount: true,
    staleTime: 0,
  });

  const draftGalleries = galleries.filter(gallery => gallery.isDraft === true && !gallery.deletedAt);

  return (
    <div className="flex min-h-screen">
      <DashboardSidebar />
      <div className="flex-1 p-6">
        {isLoading ? (
          <div className="flex items-center justify-center h-full">
            <Loader2 className="h-8 w-8 animate-spin text-primary" />
          </div>
        ) : (
          <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6">
            {draftGalleries.map(gallery => (
              <Card 
                key={gallery.id} 
                className="overflow-hidden cursor-pointer hover:shadow-lg transition-shadow"
                onClick={() => setLocation(`/g/${gallery.slug}`)}
              >
                <div className="aspect-video relative bg-muted">
                  {gallery.thumbnailUrl && (
                    <img
                      src={gallery.thumbnailUrl}
                      alt={gallery.title}
                      className="object-cover w-full h-full"
                    />
                  )}
                </div>
                <div className="p-4">
                  <h3 className="font-semibold">{gallery.title}</h3>
                  <p className="text-sm text-muted-foreground">
                    {gallery.imageCount || 0} images
                  </p>
                </div>
              </Card>
            ))}
            {draftGalleries.length === 0 && (
              <div className="col-span-full text-center text-muted-foreground">
                No draft galleries found
              </div>
            )}
          </div>
        )}
      </div>
    </div>
  );
}
