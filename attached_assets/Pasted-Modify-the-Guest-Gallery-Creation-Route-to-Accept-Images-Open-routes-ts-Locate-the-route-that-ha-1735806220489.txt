Modify the Guest Gallery Creation Route to Accept Images:

Open routes.ts.

Locate the route that handles POST /api/galleries/create.

Update the route to handle image uploads only for guest users:

ts
Copy code
const upload = multer({ dest: 'uploads/' });  // Ensure multer is set up for file handling

app.post('/api/galleries/create', upload.array('images'), async (req, res) => {
  const { title = 'Untitled Project' } = req.body;
  const files = req.files;  // Retrieve uploaded images
  const userId = req.auth?.userId || 'guest';

  // Create gallery for guest user
  const [gallery] = await db.insert(galleries).values({
    title,
    slug: generateSlug(),
    userId,
    guestUpload: userId === 'guest',
    isPublic: userId === 'guest',
    createdAt: new Date()
  }).returning();

  if (!gallery) {
    return res.status(500).json({ message: 'Failed to create gallery' });
  }

  // Upload images immediately for guest galleries
  if (userId === 'guest' && files && files.length > 0) {
    const uploadedImages = files.map(file => ({
      galleryId: gallery.id,
      url: file.path
    }));
    await db.insert(images).values(uploadedImages);
  }

  res.json(gallery);
});
Phase 2 â€“ Frontend (UploadDropzone.tsx): Send Images with FormData (Guest Users Only)
2. Update the UploadDropzone Component for Guest Uploads:

Open UploadDropzone.tsx.

Modify the onDrop function to ensure images are sent with the gallery creation request.

Update the logic to:

tsx
Copy code
const onDrop = useCallback(async (acceptedFiles: File[]) => {
  if (isUploading) return;
  setIsUploading(true);

  const formData = new FormData();
  acceptedFiles.forEach(file => {
    formData.append('images', file);  // Append images to FormData
  });

  formData.append('title', 'Untitled Project');  // Default title for guests

  const res = await fetch('/api/galleries/create', {
    method: 'POST',
    body: formData
  });

  const data = await res.json();

  if (!res.ok) {
    alert("Failed to upload guest gallery");
  } else {
    console.log("Guest Gallery created:", data);
    setLocation(`/gallery/${data.slug}`);
  }
}, [setIsUploading]);
