After reviewing the code:

Background Gallery Opacity Fades in Too Quickly:
The revealOpacity transform starts fading the background gallery immediately during drag down (dragY), making it visible too early.
This happens because the [-400, 0, 300] mapping starts transitioning from 0.2 to 1 even with minimal downward movement.
Image Scaling Affects Entire Gallery Row:
The scaling transform (scaleValue) is applied to all images in the viewport, causing adjacent images to shrink when swiping down.
This is due to the scaling being applied at the motion.div level wrapping each image instead of targeting the active image directly.
Fix 1 – Adjust Background Opacity (Later Trigger)
To ensure the background stays darker until the end of the drag:

Delay the background opacity reveal by adjusting the useTransform mapping.
The background should only start fading once the drag exceeds a larger threshold.
tsx
Copy code
const revealOpacity = useTransform(dragY, [-600, 0, 400], [0.1, 1, 0]);  // Start fading closer to 400px drag
Why it Works:

By extending the drag range (-600 to 400), the background will stay at low opacity longer, only brightening once the drag is significant.
Fix 2 – Scale Only the Active Image (Prevent Gallery Shrinkage)
To prevent adjacent images from scaling:

Apply the scale transform (dragScale) directly to the image rather than the outer motion.div.
Use conditional scaling based on the active image index.
Modify the Scaling Logic for the Active Image:
tsx
Copy code
const dragScale = useTransform(dragY, [0, 400], [1, 0.75]);  // Scale down to 75%
Apply Scale Only to the Active Image:
tsx
Copy code
<motion.img
  src={image.url}
  alt=""
  className="w-full h-full object-contain select-none"
  draggable={false}
  style={{
    scale: isActive ? dragScale : 1,  // Scale only if the image is active
    x: offsetX,
    y: offsetY,
  }}
  drag={scaleValue.get() > 1}
  dragElastic={0.2}
  dragMomentum={false}
  transition={{
    type: "spring",
    stiffness: 200,
    damping: 20,
  }}
  onPan={handlePan}
/>
Fix 3 – Prevent Adjacent Images from Moving on Drag
Lock non-active images to prevent them from moving during drag.
This keeps the focus on the active image, ensuring adjacent ones stay in place.
tsx
Copy code
animate={{
  x: isActive ? dragX.get() : index > currentIndex ? '100%' : '-100%',  // Only move active image
  opacity: 1,
  transition: {
    type: "spring",
    stiffness: 300,
    damping: 20,
  },
}}
Testing Adjustments:
Swipe Down Slowly – Verify that the background stays dark until the image is nearly at the bottom.
Check Image Scaling – Zoom and pan should only shrink the active image.
Adjacent Image Stability – Ensure that images to the left and right do not shrink during downward swipes.
